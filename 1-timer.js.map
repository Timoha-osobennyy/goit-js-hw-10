{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// БЕЗ імпортів\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        timeout: 3000,\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateInput, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const ms = userSelectedDate - now;\n\n    if (ms <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      dateInput.disabled = false;\n      return;\n    }\n\n    updateTimer(ms);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","dateInput","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selected","ms","updateTimer","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"wFAEA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,QAAS,GACjB,CAAO,EACDV,EAAS,SAAW,KAEpBM,EAAmBI,EACnBV,EAAS,SAAW,GAEvB,CACH,EAEA,UAAUC,EAAWO,CAAO,EAE5BR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBM,EAAU,YAAY,IAAM,CAE1B,MAAMI,EAAKL,EADC,IAAI,KAGhB,GAAIK,GAAM,EAAG,CACX,cAAcJ,CAAO,EACrBK,EAAY,CAAC,EACbX,EAAU,SAAW,GACrB,MACD,CAEDW,EAAYD,CAAE,CACf,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYD,EAAI,CACvB,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAE,EAEtDT,EAAO,YAAcgB,EAAeL,CAAI,EACxCV,EAAQ,YAAce,EAAeJ,CAAK,EAC1CV,EAAU,YAAcc,EAAeH,CAAO,EAC9CV,EAAU,YAAca,EAAeF,CAAO,CAChD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUN,EAAI,CAMrB,MAAME,EAAO,KAAK,MAAMF,EAAK,KAAG,EAC1BG,EAAQ,KAAK,MAAOH,EAAK,MAAO,IAAI,EACpCI,EAAU,KAAK,MAAQJ,EAAK,MAAO,KAAQ,GAAM,EACjDK,EAAU,KAAK,MAASL,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}